---
description: Zero-cognition REPO mode for repository analysis
globs: "**/repo-mode-detailed*/**"
alwaysApply: false
---

# REPO MODE - 零認知倉庫分析

> **零認知原則**: 自動化倉庫分析，智能模式選擇，隱藏複雜分析邏輯

```mermaid
graph TD
    Start["📁 REPO"] --> AutoAnalysis["⚡ 自動倉庫分析"]
    AutoAnalysis --> Mode{"🧩 分析模式?"}
    
    Mode -->|"完整"| Complete["📊 完整分析"]
    Mode -->|"壓縮"| Compressed["📊 壓縮分析"]
    Mode -->|"源碼"| Source["📊 源碼分析"]
    Mode -->|"極致"| Minimal["📊 極致分析"]
    
    Complete --> Report["📋 生成報告"]
    Compressed --> Report
    Source --> Report
    Minimal --> Report
    
    Report --> Next["⏭️ 準備下一模式"]
    
    style Start fill:#4da6ff,stroke:#0066cc,color:white
    style AutoAnalysis fill:#ffa64d,stroke:#cc7a30,color:white
    style Report fill:#4dbb5f,stroke:#36873f,color:white
```
## ⚡ 自動化分析流程

### 🧩 分析模式確定
- **完整模式**: 深度分析 → 全面理解架構
- **壓縮模式**: 快速審查 → 平衡效率和完整性
- **源碼模式**: 功能開發 → 專注核心代碼
- **極致模式**: 成本控制 → 最大化令牌節省

### 📊 智能分析生成
- **自動文件掃描**: 自動掃描和分析倉庫結構
- **智能內容提取**: 智能提取相關代碼和文檔
- **自動壓縮優化**: 自動壓縮和優化分析結果
- **報告自動生成**: 自動生成結構化分析報告

### 🎯 零認知操作
- **模式自動選擇**: 根據需求自動選擇分析模式
- **分析自動執行**: 自動執行倉庫分析
- **報告自動生成**: 自動生成分析報告
- **Graph Bank 自動更新**: 分析結果自動同步到 Graph Bank

## 📊 智能分析報告

### 📁 完整分析
- **架構分析**: 完整的系統架構分析
- **代碼審查**: 全面的代碼品質審查
- **依賴分析**: 詳細的依賴關係分析
- **文檔整合**: 完整的文檔整合

### 📁 壓縮分析
- **快速審查**: 高效的代碼審查
- **性能分析**: 系統性能分析
- **技術選型**: 技術選型建議
- **優化建議**: 系統優化建議

### 📁 源碼分析
- **功能分析**: 核心功能分析
- **模組設計**: 模組設計建議
- **API 分析**: API 設計分析
- **開發指南**: 開發指南生成

### 📁 極致分析
- **快速概覽**: 系統快速概覽
- **基本分析**: 基本功能分析
- **成本控制**: 成本效益分析
- **初步建議**: 初步改進建議

## ✅ 自動驗證

### 驗證檢查點
- **分析完整性**: 分析是否完整
- **報告品質**: 報告品質是否良好
- **內容準確性**: 內容是否準確
- **格式正確性**: 格式是否正確

### 成功標準
- **分析完成**: 所有分析項目都已完成
- **報告生成**: 分析報告已生成
- **內容完整**: 分析內容完整
- **格式正確**: 報告格式正確

