---
description: Zero-cognition MCP Memory Server integration for AI agents
globs: mcp-memory-server.mdc
alwaysApply: false
---

# MCP MEMORY SERVER - 零認知整合規則

> **TL;DR:** 此文件提供 AI agent 零認知的 MCP Memory Server 整合，隱藏底層實現細節，提供簡潔的記憶管理接口。

## 🧠 零認知記憶管理接口

AI agent 無需了解 MCP Memory Server 的技術實現，只需使用以下簡潔指令：

### 📋 核心記憶指令

```markdown
## 記憶儲存指令
MEMORY.SAVE [內容] [標籤1,標籤2] - 儲存記憶並自動標籤
MEMORY.SAVE.QUICK [內容] - 快速儲存（自動生成標籤）

## 記憶檢索指令  
MEMORY.FIND [查詢詞] - 語義搜索記憶
MEMORY.RECALL [時間範圍] - 基於時間回憶記憶
MEMORY.TAG [標籤] - 按標籤檢索記憶

## 記憶管理指令
MEMORY.DELETE [記憶ID] - 刪除特定記憶
MEMORY.HEALTH - 檢查記憶系統健康狀態
MEMORY.SUMMARY - 生成記憶摘要
```

## 🔄 自動化記憶功能

### 智能標籤生成
```markdown
當使用 MEMORY.SAVE 時，系統會自動：
- 分析內容語義
- 生成相關標籤
- 建立時間戳記
- 創建關聯索引
```

### 語義搜索優化
```markdown
當使用 MEMORY.FIND 時，系統會自動：
- 執行語義相似度搜索
- 按相關性排序結果
- 提供上下文關聯
- 過濾重複內容
```

### 時間基礎回憶
```markdown
當使用 MEMORY.RECALL 時，系統會自動：
- 解析時間範圍（今天、昨天、本週、上個月）
- 按時間順序排列記憶
- 提供時間上下文
- 生成時間線摘要
```

## 📊 記憶操作範例

### 儲存專案決策
```markdown
MEMORY.SAVE "選擇使用 React 18 的 Concurrent Features 來優化用戶體驗" "react,decision,optimization"

系統自動處理：
- 儲存決策內容
- 添加技術標籤
- 記錄決策時間
- 建立專案關聯
```

### 檢索相關記憶
```markdown
MEMORY.FIND "React 優化"

系統自動返回：
- 相關的技術決策
- 優化策略記錄
- 性能改進方案
- 相關專案經驗
```

### 回憶近期工作
```markdown
MEMORY.RECALL "本週"

系統自動返回：
- 本週完成的工作
- 重要決策記錄
- 遇到的問題和解決方案
- 學習到的經驗
```

## 🔍 記憶系統檢查點

### 記憶健康檢查
```markdown
MEMORY.HEALTH

系統檢查：
- 記憶儲存狀態
- 索引完整性
- 搜索性能
- 儲存空間使用
```

### 記憶摘要生成
```markdown
MEMORY.SUMMARY

系統生成：
- 記憶總數統計
- 熱門標籤分析
- 時間分布概覽
- 重要記憶摘要
```

## 🚨 錯誤處理與恢復

### 自動錯誤恢復
```markdown
當記憶操作失敗時，系統會自動：
- 記錄錯誤詳情
- 嘗試替代方案
- 提供降級服務
- 通知管理員
```

### 優雅降級
```markdown
當 MCP Memory Server 不可用時：
- 使用本地緩存
- 提供基本功能
- 記錄待同步操作
- 自動重連機制
```

## 🔄 與 Graph Bank 整合

### 自動同步機制
```markdown
記憶操作會自動同步到 Graph Bank：
- 重要決策 → tasks.md
- 專案進度 → progress.md
- 當前焦點 → activeContext.md
- 知識歸檔 → archive/
```

### 上下文增強
```markdown
記憶系統會增強 Graph Bank 上下文：
- 提供歷史決策參考
- 補充遺漏的專案信息
- 建立跨專案關聯
- 優化任務規劃
```

## 📋 使用檢查清單

### Agent 啟動檢查
```markdown
✓ MEMORY SERVER CHECKLIST
- MCP Memory Server 狀態正常? [YES/NO]
- 記憶索引完整? [YES/NO]
- 搜索功能可用? [YES/NO]
- Graph Bank 同步正常? [YES/NO]

→ 如果全部 YES: 記憶系統就緒
→ 如果有 NO: 執行相應修復步驟
```

### 記憶操作檢查
```markdown
✓ MEMORY OPERATION CHECKLIST
- 記憶內容清晰明確? [YES/NO]
- 標籤相關且有用? [YES/NO]
- 搜索查詢具體? [YES/NO]
- 結果相關且完整? [YES/NO]

→ 如果全部 YES: 記憶操作成功
→ 如果有 NO: 優化記憶內容或查詢
```

## 🎯 最佳實踐

### 記憶儲存最佳實踐
```markdown
1. 內容要具體明確
2. 標籤要相關且有意義
3. 定期清理過時記憶
4. 建立記憶分類體系
```

### 記憶檢索最佳實踐
```markdown
1. 使用具體的查詢詞
2. 結合時間和標籤過濾
3. 利用語義搜索能力
4. 建立記憶關聯網絡
```

## 🔄 持續改進

### 記憶系統優化
- 監控記憶使用模式
- 優化搜索算法
- 改進標籤系統
- 增強語義理解

### 整合優化
- 優化與 Graph Bank 同步
- 改進錯誤處理機制
- 增強自動化功能
- 提升用戶體驗

這個零認知整合確保 AI agent 能夠無縫使用 MCP Memory Server 的強大功能，而無需了解複雜的技術實現細節。