---
description: Zero-cognition MCP Context7 integration for AI agents
globs: mcp-context7.mdc
alwaysApply: false
---

# MCP CONTEXT7 - 零認知整合規則

> **TL;DR:** 此文件提供 AI agent 零認知的 MCP Context7 整合，隱藏底層 API 調用細節，提供簡潔的文檔查詢接口。

## 📚 零認知文檔查詢接口

AI agent 無需了解 Context7 API 的技術實現，只需使用以下簡潔指令：

### 📋 核心文檔指令

```markdown
## 文檔查詢指令
DOCS.FIND [庫名稱] - 查找並解析庫 ID
DOCS.GET [庫ID] [主題] - 獲取特定庫的文檔
DOCS.SEARCH [查詢詞] - 搜索相關文檔內容

## 智能查詢指令
DOCS.HELP [技術領域] - 獲取技術領域的幫助文檔
DOCS.EXAMPLES [庫名稱] [功能] - 獲取代碼範例
DOCS.API [庫名稱] [端點] - 獲取 API 參考文檔

## 文檔管理指令
DOCS.CACHE - 檢查文檔緩存狀態
DOCS.UPDATE - 更新文檔緩存
DOCS.VERSION [庫名稱] - 檢查庫版本信息
```

## 🔄 自動化文檔功能

### 智能庫解析
```markdown
當使用 DOCS.FIND 時，系統會自動：
- 解析庫名稱到 Context7 兼容 ID
- 匹配最佳版本
- 驗證庫可用性
- 提供替代建議
```

### 內容過濾優化
```markdown
當使用 DOCS.GET 時，系統會自動：
- 過濾相關內容
- 按相關性排序
- 提供代碼範例
- 生成使用指南
```

### 語義搜索增強
```markdown
當使用 DOCS.SEARCH 時，系統會自動：
- 執行語義搜索
- 跨庫內容檢索
- 提供相關建議
- 建立內容關聯
```

## 📊 文檔操作範例

### 查找 React 文檔
```markdown
DOCS.FIND "React"

系統自動處理：
- 解析到 /facebook/react
- 匹配最新版本
- 提供文檔概覽
- 建議相關主題
```

### 獲取特定功能文檔
```markdown
DOCS.GET "/facebook/react" "hooks"

系統自動返回：
- React Hooks 完整文檔
- 使用範例和最佳實踐
- 相關 API 參考
- 常見問題解答
```

### 搜索相關技術
```markdown
DOCS.SEARCH "狀態管理"

系統自動返回：
- Redux 文檔
- Zustand 文檔
- Context API 文檔
- 相關比較和建議
```

## 🔍 智能文檔功能

### 技術領域幫助
```markdown
DOCS.HELP "前端開發"

系統自動提供：
- 前端技術棧概覽
- 熱門庫和框架
- 學習路徑建議
- 最佳實踐指南
```

### 代碼範例獲取
```markdown
DOCS.EXAMPLES "Vue.js" "組件通信"

系統自動提供：
- Props 傳遞範例
- Event 發射範例
- Provide/Inject 範例
- Vuex 狀態管理範例
```

### API 參考查詢
```markdown
DOCS.API "Express.js" "路由"

系統自動提供：
- 路由定義方法
- 中間件使用
- 參數處理
- 錯誤處理
```

## 🚨 錯誤處理與恢復

### 自動錯誤恢復
```markdown
當文檔查詢失敗時，系統會自動：
- 嘗試替代庫名稱
- 提供相似庫建議
- 使用緩存內容
- 降級到基本搜索
```

### 優雅降級
```markdown
當 Context7 服務不可用時：
- 使用本地文檔緩存
- 提供基本搜索功能
- 記錄待同步查詢
- 自動重連機制
```

## 🔄 與 Graph Bank 整合

### 自動文檔同步
```markdown
文檔查詢會自動同步到 Graph Bank：
- 技術決策 → techContext.md
- 學習筆記 → activeContext.md
- 專案文檔 → projectbrief.md
- 知識歸檔 → archive/
```

### 上下文增強
```markdown
文檔系統會增強 Graph Bank 上下文：
- 提供技術參考
- 補充專案文檔
- 建立技術關聯
- 優化開發決策
```

## 📋 使用檢查清單

### Agent 啟動檢查
```markdown
✓ CONTEXT7 CHECKLIST
- Context7 服務狀態正常? [YES/NO]
- API 金鑰有效? [YES/NO]
- 文檔緩存完整? [YES/NO]
- Graph Bank 同步正常? [YES/NO]

→ 如果全部 YES: 文檔系統就緒
→ 如果有 NO: 執行相應修復步驟
```

### 文檔查詢檢查
```markdown
✓ DOCUMENTATION CHECKLIST
- 查詢詞具體明確? [YES/NO]
- 庫名稱正確? [YES/NO]
- 主題相關且有用? [YES/NO]
- 結果完整且準確? [YES/NO]

→ 如果全部 YES: 文檔查詢成功
→ 如果有 NO: 優化查詢詞或庫名稱
```

## 🎯 最佳實踐

### 文檔查詢最佳實踐
```markdown
1. 使用具體的庫名稱
2. 指定明確的主題或功能
3. 利用智能搜索功能
4. 結合多個相關庫
```

### 內容使用最佳實踐
```markdown
1. 驗證文檔版本
2. 檢查代碼範例
3. 參考最佳實踐
4. 建立知識關聯
```

## 🔄 持續改進

### 文檔系統優化
- 監控查詢使用模式
- 優化搜索算法
- 改進內容過濾
- 增強語義理解

### 整合優化
- 優化與 Graph Bank 同步
- 改進錯誤處理機制
- 增強自動化功能
- 提升用戶體驗

## 📚 支援的技術領域

### 前端開發
```markdown
- React, Vue.js, Angular
- TypeScript, JavaScript
- CSS, SCSS, Tailwind
- Webpack, Vite, Rollup
```

### 後端開發
```markdown
- Node.js, Express.js
- Python, Django, Flask
- Java, Spring Boot
- C#, .NET Core
```

### 資料庫
```markdown
- MySQL, PostgreSQL
- MongoDB, Redis
- SQLite, MariaDB
- Elasticsearch
```

### 雲端服務
```markdown
- AWS, Azure, GCP
- Docker, Kubernetes
- Terraform, Ansible
- CI/CD 工具
```

這個零認知整合確保 AI agent 能夠無縫使用 Context7 的強大文檔查詢功能，而無需了解複雜的 API 調用細節。