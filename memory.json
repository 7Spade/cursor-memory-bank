{
  "entities": [
    {
      "name": "Memory_Bank_System",
      "entityType": "project",
      "observations": [
        "AI Agent Collaboration Framework",
        "使用繁體中文進行交流",
        "基於 Cursor 的記憶銀行系統",
        "提供分層任務管理和自定義模式整合",
        "開發環境：Windows 11",
        "包管理器：yarn",
        "編輯器：Cursor (版本 0.48 或更高)",
        "AI 模型：Claude 4 Sonnet 或 Claude 4 Opus"
      ]
    },
    {
      "name": "VAN_Agent",
      "entityType": "agent",
      "observations": [
        "初始化代理",
        "專案分析師和初始化專家",
        "分析專案結構和複雜度",
        "確定任務級別 (Level 1-4)",
        "建立專案上下文",
        "識別技術棧和依賴關係"
      ]
    },
    {
      "name": "PLAN_Agent", 
      "entityType": "agent",
      "observations": [
        "規劃代理",
        "專案規劃師和任務分解專家",
        "將複雜任務分解為可管理的子任務",
        "建立詳細的實施計劃",
        "識別依賴關係和優先級",
        "預估時間和資源需求"
      ]
    },
    {
      "name": "CREATIVE_Agent",
      "entityType": "agent", 
      "observations": [
        "創意代理",
        "設計決策專家",
        "探索設計選項和替代方案",
        "進行技術選型分析",
        "建立設計決策文件",
        "提供創意解決方案"
      ]
    },
    {
      "name": "IMPLEMENT_Agent",
      "entityType": "agent",
      "observations": [
        "實施代理",
        "代碼實施專家",
        "系統性地實施計劃的組件",
        "編寫高品質的代碼",
        "遵循最佳實踐和編碼標準",
        "進行代碼優化和重構"
      ]
    },
    {
      "name": "REFLECT_Agent",
      "entityType": "agent",
      "observations": [
        "反思代理",
        "代碼審查和學習專家",
        "審查實施的代碼品質",
        "識別改進機會",
        "記錄經驗教訓",
        "提供優化建議"
      ]
    },
    {
      "name": "ARCHIVE_Agent",
      "entityType": "agent",
      "observations": [
        "歸檔代理",
        "文件管理專家",
        "建立全面的專案文件",
        "整理和歸檔專案資產",
        "建立知識庫",
        "維護專案歷史"
      ]
    },
    {
      "name": "User_Preferences",
      "entityType": "preferences",
      "observations": [
        "語言：繁體中文",
        "溝通風格：專業且友善",
        "開發環境：Windows 11",
        "包管理器：yarn",
        "偏好 AI：Claude 4 Sonnet"
      ]
    },
    {
      "name": "Workflow_Level_1",
      "entityType": "workflow",
      "observations": [
        "快速錯誤修復",
        "工作流程：VAN → IMPLEMENT",
        "適用於單一組件或 UI 元素",
        "完成時間：分鐘到小時",
        "風險：低，隔離變更"
      ]
    },
    {
      "name": "Workflow_Level_2",
      "entityType": "workflow", 
      "observations": [
        "簡單增強",
        "工作流程：VAN → PLAN → IMPLEMENT → REFLECT",
        "適用於單一組件或子系統",
        "完成時間：小時到 1-2 天",
        "風險：中等，限制在特定區域"
      ]
    },
    {
      "name": "Workflow_Level_3_4",
      "entityType": "workflow",
      "observations": [
        "中級功能/複雜系統",
        "工作流程：VAN → PLAN → CREATIVE → IMPLEMENT → REFLECT → ARCHIVE",
        "適用於多個組件或完整功能",
        "完成時間：天到週",
        "風險：高，架構影響"
      ]
    },
    {
      "name": "GitHub_Style_Permission_System",
      "entityType": "architecture",
      "observations": [
        "Angular v20 + Signals + Firebase 實現的 GitHub 式權限系統",
        "使用統一的 Account 模型，通過 type 區分用戶和組織",
        "使用 login 作為唯一識別碼",
        "統一的 /accounts 集合路徑",
        "Repository 擁有者支援（個人/組織）",
        "完整的協作者系統"
      ]
    },
    {
      "name": "Angular_v20_Modern_Features",
      "entityType": "technology",
      "observations": [
        "Signals：響應式狀態管理",
        "Control Flow：@if, @for, @switch 替代傳統結構指令",
        "Standalone Components：無需 NgModule",
        "inject() 函數：現代化依賴注入",
        "Computed Signals：自動計算衍生狀態",
        "現代化的開發工具鏈",
        "Signal-based Inputs：使用 input() 函數替代 @Input() 裝飾器",
        "Type Narrowing：更好的類型安全和控制流分析",
        "Performance Optimization：更高效的變更檢測和渲染"
      ]
    },
    {
      "name": "Angular_v20_Control_Flow",
      "entityType": "technology",
      "observations": [
        "@if 語法：替代 *ngIf，支援 @else 分支",
        "@for 語法：替代 *ngFor，必須使用 track 表達式優化性能",
        "@switch 語法：替代 *ngSwitch，支援 @case 和 @default",
        "內建控制流：無需導入 CommonModule",
        "類型縮小：在控制流中自動進行類型推斷",
        "性能優化：更高效的 DOM 更新和變更檢測",
        "語法簡潔：更直觀的模板語法"
      ]
    },
    {
      "name": "Angular_v20_Signal_Inputs",
      "entityType": "technology",
      "observations": [
        "input() 函數：替代 @Input() 裝飾器",
        "類型安全：更好的 TypeScript 支援",
        "不可變性：Signal inputs 是只讀的",
        "控制流相容：與新的控制流語法完美整合",
        "自動遷移：提供遷移工具從 @Input() 到 input()",
        "性能提升：更高效的變更檢測",
        "語法簡潔：更現代的 API 設計"
      ]
    },
    {
      "name": "Angular_v20_Modern_Design_Patterns",
      "entityType": "design_pattern",
      "observations": [
        "Signal-based Architecture：使用 Signals 進行狀態管理",
        "Control Flow Patterns：使用新的控制流語法",
        "Type Narrowing Patterns：利用類型縮小提高代碼安全性",
        "Performance Patterns：使用 track 表達式優化列表渲染",
        "Modern DI Patterns：使用 inject() 函數進行依賴注入",
        "Standalone Component Patterns：無需 NgModule 的組件設計",
        "Reactive Patterns：基於 Signals 的響應式編程模式"
      ]
    },
    {
      "name": "Multi_Level_Permission_System",
      "entityType": "architecture",
      "observations": [
        "個人 → 組織 → 團隊 → 資源的層級結構",
        "5 種組織角色：Owner, Admin, Member, Billing, Outside Collaborator",
        "2 種團隊角色：Maintainer, Member",
        "Repository 權限：read, triage, write, maintain, admin",
        "權限可疊加和覆寫",
        "支援自定義權限邏輯"
      ]
    },
    {
      "name": "Value_Objects_Pattern",
      "entityType": "design_pattern",
      "observations": [
        "ProfileVO：封裝檔案資訊",
        "PermissionVO：封裝權限資訊",
        "SettingsVO：封裝設定資訊",
        "CertificateVO、SocialRelationVO、BusinessLicenseVO 等",
        "提高程式碼可讀性和可維護性",
        "符合領域驅動設計（DDD）原則"
      ]
    },
    {
      "name": "Firestore_Database_Design",
      "entityType": "architecture",
      "observations": [
        "統一集合結構：所有 Account 存儲在 accounts 集合中",
        "子集合模式：組織成員和團隊使用子集合存儲",
        "權限繼承：通過資料庫結構設計實現權限層級繼承",
        "支援複雜的權限邏輯",
        "統一的權限檢查邏輯"
      ]
    },
    {
      "name": "Service_Layer_Architecture",
      "entityType": "architecture",
      "observations": [
        "AuthService：整合 Firebase Auth 和 Firestore",
        "OrganizationService：專門處理組織相關業務邏輯",
        "PermissionService：使用 Signals 管理權限狀態",
        "使用 inject() 函數進行依賴注入",
        "清晰的 API 設計，易於使用和測試",
        "支援多層級權限檢查"
      ]
    },
    {
      "name": "Security_Design_Patterns",
      "entityType": "security",
      "observations": [
        "多層安全防護：前端路由守衛 + Firestore 安全規則 + 後端權限驗證",
        "基於角色的存取控制（RBAC）",
        "支援複雜的權限邏輯",
        "統一的錯誤處理和重定向",
        "完整的輸入驗證和錯誤處理",
        "ValidationUtils 提供統一的驗證邏輯"
      ]
    },
    {
      "name": "Modern_UI_Design_Patterns",
      "entityType": "ui_design",
      "observations": [
        "使用 Control Flow（@if, @for, @switch）替代傳統結構指令",
        "Standalone Components 無需 NgModule",
        "Signals 基礎的響應式 UI",
        "權限驅動的 UI：根據權限動態顯示/隱藏",
        "使用 Computed Signals 自動更新 UI 狀態",
        "權限檢查與 UI 邏輯分離"
      ]
    }
  ],
  "relations": [
    {
      "from": "VAN_Agent",
      "to": "Memory_Bank_System",
      "relationType": "analyzes"
    },
    {
      "from": "PLAN_Agent",
      "to": "Memory_Bank_System", 
      "relationType": "plans"
    },
    {
      "from": "CREATIVE_Agent",
      "to": "Memory_Bank_System",
      "relationType": "designs"
    },
    {
      "from": "IMPLEMENT_Agent",
      "to": "Memory_Bank_System",
      "relationType": "implements"
    },
    {
      "from": "REFLECT_Agent",
      "to": "Memory_Bank_System",
      "relationType": "reviews"
    },
    {
      "from": "ARCHIVE_Agent",
      "to": "Memory_Bank_System",
      "relationType": "archives"
    },
    {
      "from": "User_Preferences",
      "to": "Memory_Bank_System",
      "relationType": "configures"
    },
    {
      "from": "Workflow_Level_1",
      "to": "VAN_Agent",
      "relationType": "uses"
    },
    {
      "from": "Workflow_Level_1",
      "to": "IMPLEMENT_Agent",
      "relationType": "uses"
    },
    {
      "from": "Workflow_Level_2",
      "to": "VAN_Agent",
      "relationType": "uses"
    },
    {
      "from": "Workflow_Level_2",
      "to": "PLAN_Agent",
      "relationType": "uses"
    },
    {
      "from": "Workflow_Level_2",
      "to": "IMPLEMENT_Agent",
      "relationType": "uses"
    },
    {
      "from": "Workflow_Level_2",
      "to": "REFLECT_Agent",
      "relationType": "uses"
    },
    {
      "from": "Workflow_Level_3_4",
      "to": "VAN_Agent",
      "relationType": "uses"
    },
    {
      "from": "Workflow_Level_3_4",
      "to": "PLAN_Agent",
      "relationType": "uses"
    },
    {
      "from": "Workflow_Level_3_4",
      "to": "CREATIVE_Agent",
      "relationType": "uses"
    },
    {
      "from": "Workflow_Level_3_4",
      "to": "IMPLEMENT_Agent",
      "relationType": "uses"
    },
    {
      "from": "Workflow_Level_3_4",
      "to": "REFLECT_Agent",
      "relationType": "uses"
    },
    {
      "from": "Workflow_Level_3_4",
      "to": "ARCHIVE_Agent",
      "relationType": "uses"
    },
    {
      "from": "GitHub_Style_Permission_System",
      "to": "Angular_v20_Modern_Features",
      "relationType": "uses"
    },
    {
      "from": "GitHub_Style_Permission_System",
      "to": "Multi_Level_Permission_System",
      "relationType": "implements"
    },
    {
      "from": "GitHub_Style_Permission_System",
      "to": "Value_Objects_Pattern",
      "relationType": "uses"
    },
    {
      "from": "GitHub_Style_Permission_System",
      "to": "Firestore_Database_Design",
      "relationType": "uses"
    },
    {
      "from": "Service_Layer_Architecture",
      "to": "Angular_v20_Modern_Features",
      "relationType": "uses"
    },
    {
      "from": "Service_Layer_Architecture",
      "to": "Multi_Level_Permission_System",
      "relationType": "implements"
    },
    {
      "from": "Security_Design_Patterns",
      "to": "Multi_Level_Permission_System",
      "relationType": "protects"
    },
    {
      "from": "Modern_UI_Design_Patterns",
      "to": "Angular_v20_Modern_Features",
      "relationType": "uses"
    },
    {
      "from": "Modern_UI_Design_Patterns",
      "to": "Multi_Level_Permission_System",
      "relationType": "displays"
    },
    {
      "from": "Value_Objects_Pattern",
      "to": "Service_Layer_Architecture",
      "relationType": "supports"
    },
    {
      "from": "Angular_v20_Control_Flow",
      "to": "Angular_v20_Modern_Features",
      "relationType": "extends"
    },
    {
      "from": "Angular_v20_Signal_Inputs",
      "to": "Angular_v20_Modern_Features",
      "relationType": "extends"
    },
    {
      "from": "Angular_v20_Modern_Design_Patterns",
      "to": "Angular_v20_Control_Flow",
      "relationType": "uses"
    },
    {
      "from": "Angular_v20_Modern_Design_Patterns",
      "to": "Angular_v20_Signal_Inputs",
      "relationType": "uses"
    },
    {
      "from": "Modern_UI_Design_Patterns",
      "to": "Angular_v20_Control_Flow",
      "relationType": "uses"
    },
    {
      "from": "Modern_UI_Design_Patterns",
      "to": "Angular_v20_Signal_Inputs",
      "relationType": "uses"
    }
  ]
}